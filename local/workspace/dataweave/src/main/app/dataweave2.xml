<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <flow name="dataweave2Flow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/dataweave2" doc:name="HTTP"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:input-payload doc:sample="sample_data\json_2.json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml

%var data = payload distinctBy $.flightCode orderBy $.price  filter $.price < 500 or $.availableSeats > 10 map {
	flightOperator: upper $.airlineName,
	cost: $.price,
	takeOffDate: $.departureDate 
					as :date {format: "yyyy/MM/dd"}
					as :string  {format: "dd MMM yyyy"},
	type: $.planeType replace "Bo" with "Boe",
	fromAirport: $.origination,
	code: lower $.flightCode,
	emptySeats: $.availableSeats as :number,
	toAirport: $.destination,
	status: 'Filling fast' when $.availableSeats <= 10 otherwise 'Normal'
} 

%var descendingData = data[-1 to 0]

%var seggregatedFlightData = descendingData map flight @(number: $$ +1) : $
---
flights @(size: sizeOf payload) : {(seggregatedFlightData)}
]]></dw:set-payload>
        </dw:transform-message>
    </flow>
</mule>
